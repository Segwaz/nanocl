server {
  listen {{ listen }};
  {% if ssl %}
  listen {{ listen_https }} http2 ssl;
  {% endif %}
  {% if domain %}server_name {{ domain }};
  if ($host != {{ domain }}) {
    return 502;
  }{% endif %}
  {% if ssl %}
  if ($scheme != https) {
      return 301 https://$host$request_uri;
  }
  ssl_certificate         {{ssl.Certificate}};
  ssl_certificate_key     {{ssl.CertificateKey}};{% if ssl.Dhparam %}
  ssl_dhparam             {{ssl.Dhparam}};
  ssl_protocols         SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           HIGH:!aNULL:!MD5;
  ssl_session_cache     shared:SSL:20m;
  ssl_session_timeout   4h;
  ssl_handshake_timeout 30s;
  {% endif %}{% if ssl.CertificateClient %}ssl_client_certificate  {{ssl.CertificateClient}};
  {% endif %}{% if ssl.VerifyClient %}
  ssl_verify_client       on;
  {% endif %}{% endif %}{% if hide_upstream %}{% else %}{% for location in locations %}
  location {{ location.path }} { {% if location.headers %}{% for header in location.headers %}
    proxy_set_header {{ header }};
    {% endfor %}{% endif %}{% if location.version %}proxy_http_version {{ location.version }};
    {% endif %}{% if location.redirect %}
    return {{ location.redirect }} {{ location.upstream_key }};{% else %}
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Scheme $scheme;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_pass {{ location.upstream_key }}/;
    {% endif %}{% if location.allowed_ips %}{% for allowed_ip in location.allowed_ips %}
    allow {{ allowed_ip }};
    {% endfor %}deny all;{% endif %}
  }
  {% endfor %}{% endif %}
}
