version: '3.9'

networks:
  system:
    name: system
    driver: bridge
    external: false
    driver_opts:
      com.docker.network.bridge.name: nanocl.system

services:
  nstore:
    container_name: nstore.system.c
    hostname: store.nanocl.internal
    image: cockroachdb/cockroach:v23.1.15
    entrypoint: /bin/sh
    tty: true
    ports:
      - 26257:26257
      - 26258:26258
    networks:
      - system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store:${STATE_DIR:-${HOME}/.nanocl_dev/state}/store
    environment:
      - STORE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/store
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nstore.system
      - io.nanocl.n=system
    command:
    - -c
    - |
      echo "starting cockroachdb"
      if [ ! -f "$$STORE_DIR/ca/ca.key" ]; then
        echo "generating certs"
        mkdir -p $$STORE_DIR/ca $$STORE_DIR/certs $$STORE_DIR/data
        cockroach cert create-ca --certs-dir=$$STORE_DIR/certs --ca-key=$$STORE_DIR/ca/ca.key
        cockroach cert create-node 127.0.0.1 store.nanocl.internal --certs-dir=$$STORE_DIR/certs --ca-key=$$STORE_DIR/ca/ca.key
        cockroach cert create-client root --certs-dir=$$STORE_DIR/certs --ca-key=$$STORE_DIR/ca/ca.key
      fi
      cockroach start-single-node --listen-addr=:26257 --sql-addr=:26258 --certs-dir=$$STORE_DIR/certs --store=$$STORE_DIR/data

  nmetrics:
    container_name: nmetrics.system.c
    image: ghcr.io/next-hat/metrsd:0.5.2
    tty: true
    networks:
      - system
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=metrsd=info
    command:
      - --hosts
      - unix:///run/nanocl/metrics.sock
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nmetrics.system
      - io.nanocl.n=system
    volumes:
      - /run/nanocl:/run/nanocl

  nproxy:
    container_name: nproxy.system.c
    image: nproxy:dev
    tty: true
    network_mode: host
    environment:
      - STATE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nproxy.system
      - io.nanocl.n=system
    volumes:
      - //run/guest-services/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy:${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy

  ndns:
    container_name: ndns.system.c
    image: ndns:dev
    tty: true
    network_mode: host
    environment:
    - STATE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns
    labels:
    - io.nanocl=enabled
    - io.nanocl.kind=cargo
    - io.nanocl.c=ndns.system
    - io.nanocl.n=system
    volumes:
    - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns
