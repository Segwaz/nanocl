version: '3.9'

networks:
  system:
    name: system
    driver: bridge
    external: false
    driver_opts:
      com.docker.network.bridge.name: nanocl.system

services:
  nstore:
    container_name: nstore.system.c
    image: cockroachdb/cockroach:v23.1.12
    hostname: store.nanocl.internal
    entrypoint: /bin/sh
    tty: true
    ports:
      - 26257:26257
      - 26258:26258
    networks:
      - system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/ca:/ca
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/certs:/certs
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/data:/cockroach/cockroach-data
    environment:
      - TZ=Europe/Paris
    command:
      - -c
      - |
        if [[ ! -f "/ca/ca.key" ]]; then
          echo "generating certs"
          cockroach cert create-ca --certs-dir=/certs --ca-key=/ca/ca.key
          cockroach cert create-node 127.0.0.1 store.nanocl.internal --certs-dir=/certs --ca-key=/ca/ca.key
          cockroach cert create-client root --certs-dir=/certs --ca-key=/ca/ca.key
        fi
        cockroach start-single-node --certs-dir=/certs --listen-addr=:26257 --sql-addr=:26258
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nstore.system
      - io.nanocl.n=system

  ndns:
    container_name: ndns.system.c
    image: ndns:dev
    tty: true
    network_mode: host
    environment:
      - TZ=Europe/Paris
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:/opt/dns
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ndns.system
      - io.nanocl.n=system

  nmetrics:
    container_name: nmetrics.system.c
    image: ghcr.io/next-hat/metrsd:0.4.1
    tty: true
    networks:
      - system
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=metrsd=info
    command:
      - --hosts
      - unix:///run/nanocl/metrics.sock
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nmetrics.system
      - io.nanocl.n=system
    volumes:
      - /run/nanocl:/run/nanocl

  nproxy:
    container_name: nproxy.system.c
    image: nproxy:dev
    tty: true
    network_mode: host
    environment:
      - TZ=Europe/Paris
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nproxy.system
      - io.nanocl.n=system
    volumes:
      - /run:/run
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/run:/run
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/letsencrypt:/etc/letsencrypt
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/certs:/etc/nginx/certs
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/secrets:/opt/secrets
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/logs:/var/log/nginx/access
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/html:/usr/share/nginx/html
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/conf.d:/etc/nginx/conf.d
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/sites-available:/etc/nginx/sites-available
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/sites-enabled:/etc/nginx/sites-enabled
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/streams-available:/etc/nginx/streams-available
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/streams-enabled:/etc/nginx/streams-enabled
